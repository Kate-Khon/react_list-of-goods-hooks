{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","minLength","visibleGoods","filter","element","length","ALPABET","sort","good1","good2","localeCompare","LENGTH","reverse","App","useState","isStarted","setIsStarted","setIsReversed","NONE","setSortType","lengthValue","setLengthValue","className","type","onClick","map","product","name","onChange","event","target","value","Array","_","i","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAe,YAAIJ,GAAOK,QAAO,SAAAC,GAAO,OAC5CA,EAAQC,QAAUJ,KASpB,OANIF,IAAaJ,EAASW,QACxBJ,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC/CV,IAAaJ,EAASgB,QAC/BT,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMH,OAASI,EAAMJ,UAGpDL,EAAaE,EAAaU,UAAYV,G,SAtB1CP,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAyBE,IAAMkB,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOd,EAAP,KAAmBiB,EAAnB,KACA,EAAgCH,mBAASnB,EAASuB,MAAlD,mBAAOnB,EAAP,KAAiBoB,EAAjB,KACA,EAAsCL,mBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKC,UAAU,uCAAf,WACIP,GACA,wBACEQ,KAAK,SACLC,QAAS,WACPR,GAAa,IAEfM,UAAU,6BALZ,mBAWDP,GACC,qCACE,sBAAKO,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACPL,EAAYxB,EAASW,UAEvBgB,UAAU,0BALZ,iCAUA,wBACEC,KAAK,SACLC,QAAS,WACPL,EAAYxB,EAASgB,SAEvBW,UAAU,0BALZ,4BAUA,wBACEC,KAAK,SACLC,QAAS,WACPP,GAAejB,IAEjBsB,UAAU,0BALZ,qBAUA,wBACEC,KAAK,SACLC,QAAS,WACPP,GAAc,GACdE,EAAYxB,EAASuB,MACrBG,EAAe,IAEjBC,UAAU,4BAPZ,sBAaF,oBAAIA,UAAU,+BAAd,SACGzB,EACCD,EACAG,EACAC,EACAoB,GACAK,KAAI,SAAAC,GAAO,OACX,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,QAOX,gCACE,mBAAGJ,UAAU,OAAb,wCAEA,qBAAKA,UAAU,sCAAf,SACE,wBACEK,KAAK,gBACLC,SAAU,SAACC,GACTR,GAAgBQ,EAAMC,OAAOC,QAHjC,SAMG,YAAIC,MAAM,KAAKP,KAAI,SAACQ,EAAGC,GAAJ,OAClB,wBAAQH,MAAOG,EAAI,EAAnB,SAAuBA,EAAI,qBCnI7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c9950d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods].filter(element => (\n    element.length >= minLength\n  ));\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [lengthValue, setLengthValue] = useState(1);\n\n  return (\n    <div className=\"App box has-background-warning-light\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsStarted(true);\n          }}\n          className=\"button is-success is-light\"\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.ALPABET);\n              }}\n              className=\"button is-info is-light\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.LENGTH);\n              }}\n              className=\"button is-info is-light\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setIsReversed(!isReversed);\n              }}\n              className=\"button is-info is-light\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortType(SortType.NONE);\n                setLengthValue(1);\n              }}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods content is-large block\">\n            {getReorderedGoods(\n              goodsFromServer,\n              sortType,\n              isReversed,\n              lengthValue,\n            ).map(product => (\n              <li\n                className=\"Goods__item\"\n                key={product}\n              >\n                {product}\n              </li>\n            ))}\n          </ul>\n\n          <div>\n            <p className=\"text\">Select min length of word:</p>\n\n            <div className=\"select is-multiply is-success block\">\n              <select\n                name=\"minWordLength\"\n                onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                  setLengthValue(+event.target.value);\n                }}\n              >\n                {[...Array(10)].map((_, i) => (\n                  <option value={i + 1}>{i + 1}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}