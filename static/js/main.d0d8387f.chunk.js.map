{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","lengthValue","setLengthValue","reorderedGoods","goods","minLength","visibleGoods","filter","element","length","ALPABET","sort","good1","good2","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","map","product","name","onChange","event","target","value","Array","_","i","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCP,mBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAMMC,EAjCR,SACEC,EACAL,EACAH,EACAS,GAEA,IAAMC,EAAeF,EAAMG,QAAO,SAAAC,GAAO,OACvCA,EAAQC,QAAUJ,KAGpB,OAAQN,GACN,KAAKT,EAASoB,QACZJ,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKvB,EAASyB,OACZT,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMH,OAASI,EAAMJ,UAK7D,OAAOb,EAAaU,EAAaU,UAAYV,EAatBW,CACrB1B,EACAQ,EACAH,EACAK,GAGF,OACE,qBAAKiB,UAAU,uCAAf,SACIxB,EAYE,qCACE,sBAAKwB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACPpB,EAAYV,EAASoB,UAEvBQ,UAAU,0BALZ,iCAUA,wBACEC,KAAK,SACLC,QAAS,WACPpB,EAAYV,EAASyB,SAEvBG,UAAU,0BALZ,4BAUA,wBACEC,KAAK,SACLC,QAAS,WACPvB,GAAeD,IAEjBsB,UAAU,0BALZ,qBAUA,wBACEC,KAAK,SACLC,QAAS,WACPvB,GAAc,GACdG,EAAYV,EAASQ,MACrBI,EAAe,IAEjBgB,UAAU,4BAPZ,sBAaF,oBAAIA,UAAU,+BAAd,SACGf,EAAekB,KAAI,SAAAC,GAAO,OACzB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,QAOX,gCACE,mBAAGJ,UAAU,OAAb,wCAEA,qBAAKA,UAAU,sCAAf,SACE,wBAAQK,KAAK,gBAAgBC,SArFvB,SAACC,GACnBvB,GAAgBuB,EAAMC,OAAOC,QAoFjB,SACG,YAAIC,MAAM,KAAKP,KAAI,SAACQ,EAAGC,GAAJ,OAClB,wBAAQH,MAAOG,EAAI,EAAnB,SAAuBA,EAAI,iBAxErC,wBACEX,KAAK,SACLC,QAAS,WACPzB,GAAa,IAEfuB,UAAU,6BALZ,sBC/DVa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0d8387f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = goods.filter(element => (\n    element.length >= minLength\n  ));\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [lengthValue, setLengthValue] = useState(1);\n\n  const handleEvent = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLengthValue(+event.target.value);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n    lengthValue,\n  );\n\n  return (\n    <div className=\"App box has-background-warning-light\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsStarted(true);\n            }}\n            className=\"button is-success is-light\"\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setSortType(SortType.ALPABET);\n                }}\n                className=\"button is-info is-light\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setSortType(SortType.LENGTH);\n                }}\n                className=\"button is-info is-light\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setIsReversed(!isReversed);\n                }}\n                className=\"button is-info is-light\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setIsReversed(false);\n                  setSortType(SortType.NONE);\n                  setLengthValue(1);\n                }}\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods content is-large block\">\n              {reorderedGoods.map(product => (\n                <li\n                  className=\"Goods__item\"\n                  key={product}\n                >\n                  {product}\n                </li>\n              ))}\n            </ul>\n\n            <div>\n              <p className=\"text\">Select min length of word:</p>\n\n              <div className=\"select is-multiply is-success block\">\n                <select name=\"minWordLength\" onChange={handleEvent}>\n                  {[...Array(10)].map((_, i) => (\n                    <option value={i + 1}>{i + 1}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}